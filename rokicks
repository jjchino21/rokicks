-- SCRIPT MADE BY LOVEXICY

-- spidermanw#5854 (rokicks)

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")
local QTotp = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local GODMODE = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local VRR15 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local AIMVIEWER = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local BikeFly = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local ANTILOCK = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local LOCK = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local LOCKANDANTILOCK = Instance.new("TextLabel")
local autofarm = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SILENTAIM = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local CLOSE = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false


Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(131, 0, 4)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.282317966, 0, 0.306172818, 0)
Frame.Size = UDim2.new(0, 586, 0, 313)
Frame.Active = true
Frame.Draggable = true

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(131, 0, 4)
TextLabel.Position = UDim2.new(0, 0, 0.261980832, 0)
TextLabel.Size = UDim2.new(0, 586, 0, 54)
TextLabel.Font = Enum.Font.Fantasy
TextLabel.Text = "ROKICKS"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 31.000
TextLabel.TextWrapped = true

UICorner.Parent = TextLabel

UICorner_2.Parent = Frame

QTotp.Name = "Q To tp"
QTotp.Parent = Frame
QTotp.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
QTotp.BorderColor3 = Color3.fromRGB(118, 0, 2)
QTotp.Position = UDim2.new(0.372013658, 0, 0.434504807, 0)
QTotp.Size = UDim2.new(0, 162, 0, 50)
QTotp.Font = Enum.Font.Arial
QTotp.Text = "Q TO TP"
QTotp.TextColor3 = Color3.fromRGB(255, 0, 8)
QTotp.TextSize = 20.000
QTotp.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
QTotp.TextStrokeTransparency = 0.000
QTotp.TextWrapped = true
QTotp.MouseButton1Down:connect(function()
	key = "Q"


	local plr = game.Players.LocalPlayer
	local chr = plr.Character or plr.CharacterAdded:Wait()
	local uis = game:GetService("UserInputService")

	uis.InputBegan:Connect(function(keyc, sp)
		if keyc.KeyCode == Enum.KeyCode[key] and not sp and plr:GetMouse().Target then
			chr:WaitForChild("HumanoidRootPart").CFrame = plr:GetMouse().Hit
		end
	end)
end)

UICorner_3.Parent = QTotp

GODMODE.Name = "GODMODE"
GODMODE.Parent = Frame
GODMODE.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
GODMODE.BorderColor3 = Color3.fromRGB(118, 0, 2)
GODMODE.Position = UDim2.new(0.703071713, 0, 0.434504807, 0)
GODMODE.Size = UDim2.new(0, 162, 0, 50)
GODMODE.Font = Enum.Font.Arial
GODMODE.Text = "GODMODE"
GODMODE.TextColor3 = Color3.fromRGB(255, 0, 8)
GODMODE.TextSize = 20.000
GODMODE.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
GODMODE.TextStrokeTransparency = 0.000
GODMODE.TextWrapped = true
GODMODE.MouseButton1Down:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/cypherdh/GodMode-V3/main/script"))()
end)

UICorner_4.Parent = GODMODE

VRR15.Name = "VR (R15)"
VRR15.Parent = Frame
VRR15.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
VRR15.BorderColor3 = Color3.fromRGB(118, 0, 2)
VRR15.Position = UDim2.new(0.703071713, 0, 0.750798702, 0)
VRR15.Size = UDim2.new(0, 162, 0, 50)
VRR15.Font = Enum.Font.Arial
VRR15.Text = "VR (R15)"
VRR15.TextColor3 = Color3.fromRGB(255, 0, 8)
VRR15.TextSize = 20.000
VRR15.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
VRR15.TextStrokeTransparency = 0.000
VRR15.TextWrapped = true
VRR15.MouseButton1Down:connect(function()
	local handTransparency = 0 --transparency of your hands
	local handsOffset = CFrame.fromEulerAnglesXYZ(8, 0, 0) * CFrame.new(0, 0.7, 0.15)
	local headScale = 1.5
	local flyspeed = headScale / 4
	local flyFPS = 120
	local disableVrLaserPointer = false --disables robloxes vr laser pointer
	local enableGunMod = false
	local flybutton = Enum.KeyCode.ButtonR1
	local equipbutton = Enum.KeyCode.ButtonA
	local shootbutton = Enum.KeyCode.ButtonR2

--[[
    VR SCRIPP 
    
    MAED BY MyWorld#4430 
    discord.gg/pYVHtSJmEY
    
    tanks for testing Ren~#0724
    (he literally fell asleep in vr while testing no joke)
    
    feel the power ðŸ˜ˆ
    of good optimization
    boi.
]]

	--reanimate by MyWorld#4430 discord.gg/pYVHtSJmEY
	local Vector3_101 = Vector3.new(1, 0, 1)
	local netless_Y = Vector3.new(0, 25.1, 0)
	local function getNetlessVelocity(realPartVelocity) --edit this if you have a better netless method
		if (realPartVelocity.Y > 1) or (realPartVelocity.Y < -1) then
			return realPartVelocity * (25.1 / realPartVelocity.Y)
		end
		realPartVelocity *= Vector3_101
		local mag = realPartVelocity.Magnitude
		if mag > 1 then
			realPartVelocity *= 100 / mag
		end
		return realPartVelocity + netless_Y
	end
	local simradius = "shp" --simulation radius (net bypass) method
	--"shp" - sethiddenproperty
	--"ssr" - setsimulationradius
	--false - disable
	local noclipAllParts = false --set it to true if you want noclip
	local flingpart = "HumanoidRootPart" --the part that will be used to fling (ctrl + F "fling function")
	local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
	local newanimate = true --disables the animate script and enables after reanimation
	local discharscripts = true --disables all localScripts parented to your character before reanimation
	local R15toR6 = true --tries to convert your character to r6 if its r15
	local hatcollide = false --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
	local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
	local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
	local hedafterneck = true --disable aligns for head and enable after neck or torso is removed
	local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
	local method = 3 --reanimation method
	--methods:
	--0 - breakJoints (takes [loadtime] seconds to laod)
	--1 - limbs
	--2 - limbs + anti respawn
	--3 - limbs + breakJoints after [loadtime] seconds
	--4 - remove humanoid + breakJoints
	--5 - remove humanoid + limbs
	local alignmode = 2 --AlignPosition mode
	--modes:
	--1 - AlignPosition rigidity enabled true
	--2 - 2 AlignPositions rigidity enabled both true and false
	--3 - AlignPosition rigidity enabled false

	local lp = game:GetService("Players").LocalPlayer
	local rs = game:GetService("RunService")
	local stepped = rs.Stepped
	local heartbeat = rs.Heartbeat
	local renderstepped = rs.RenderStepped
	local sg = game:GetService("StarterGui")
	local ws = game:GetService("Workspace")
	local cf = CFrame.new
	local v3 = Vector3.new
	local v3_0 = v3(0, 0, 0)
	local inf = math.huge

	local c = lp.Character

	if not (c and c.Parent) then
		return
	end

	c.Destroying:Connect(function()
		c = nil
	end)

	local function gp(parent, name, className)
		if typeof(parent) == "Instance" then
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then
					return v
				end
			end
		end
		return nil
	end

	local function align(Part0, Part1)
		Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

		local att0 = Instance.new("Attachment", Part0)
		att0.Orientation = v3_0
		att0.Position = v3_0
		att0.Name = "att0_" .. Part0.Name
		local att1 = Instance.new("Attachment", Part1)
		att1.Orientation = v3_0
		att1.Position = v3_0
		att1.Name = "att1_" .. Part1.Name

		if (alignmode == 1) or (alignmode == 2) then
			local ape = Instance.new("AlignPosition", att0)
			ape.ApplyAtCenterOfMass = false
			ape.MaxForce = inf
			ape.MaxVelocity = inf
			ape.ReactionForceEnabled = false
			ape.Responsiveness = 200
			ape.Attachment1 = att1
			ape.Attachment0 = att0
			ape.Name = "AlignPositionRtrue"
			ape.RigidityEnabled = true
		end

		if (alignmode == 2) or (alignmode == 3) then
			local apd = Instance.new("AlignPosition", att0)
			apd.ApplyAtCenterOfMass = false
			apd.MaxForce = inf
			apd.MaxVelocity = inf
			apd.ReactionForceEnabled = false
			apd.Responsiveness = 200
			apd.Attachment1 = att1
			apd.Attachment0 = att0
			apd.Name = "AlignPositionRfalse"
			apd.RigidityEnabled = false
		end

		local ao = Instance.new("AlignOrientation", att0)
		ao.MaxAngularVelocity = inf
		ao.MaxTorque = inf
		ao.PrimaryAxisOnly = false
		ao.ReactionTorqueEnabled = false
		ao.Responsiveness = 200
		ao.Attachment1 = att1
		ao.Attachment0 = att0
		ao.RigidityEnabled = false

		if type(getNetlessVelocity) == "function" then
			local realVelocity = v3_0
			local steppedcon = stepped:Connect(function()
				Part0.Velocity = realVelocity
			end)
			local heartbeatcon = heartbeat:Connect(function()
				realVelocity = Part0.Velocity
				Part0.Velocity = getNetlessVelocity(realVelocity)
			end)
			Part0.Destroying:Connect(function()
				Part0 = nil
				steppedcon:Disconnect()
				heartbeatcon:Disconnect()
			end)
		end
	end

	local function respawnrequest()
		local ccfr = ws.CurrentCamera.CFrame
		local c = lp.Character
		lp.Character = nil
		lp.Character = c
		local con = nil
		con = ws.CurrentCamera.Changed:Connect(function(prop)
			if (prop ~= "Parent") and (prop ~= "CFrame") then
				return
			end
			ws.CurrentCamera.CFrame = ccfr
			con:Disconnect()
		end)
	end

	local destroyhum = (method == 4) or (method == 5)
	local breakjoints = (method == 0) or (method == 4)
	local antirespawn = (method == 0) or (method == 2) or (method == 3)

	hatcollide = hatcollide and (method == 0)

	addtools = addtools and gp(lp, "Backpack", "Backpack")

	local fenv = getfenv()
	local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
	local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.set_simulation_rad or fenv.setsimulationrad

	if shp and (simradius == "shp") then
		spawn(function()
			while c and heartbeat:Wait() do
				shp(lp, "SimulationRadius", inf)
			end
		end)
	elseif ssr and (simradius == "ssr") then
		spawn(function()
			while c and heartbeat:Wait() do
				ssr(inf)
			end
		end)
	end

	antiragdoll = antiragdoll and function(v)
		if v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint") then
			v.Parent = nil
		end
	end

	if antiragdoll then
		for i, v in pairs(c:GetDescendants()) do
			antiragdoll(v)
		end
		c.DescendantAdded:Connect(antiragdoll)
	end

	if antirespawn then
		respawnrequest()
	end

	if method == 0 then
		wait(loadtime)
		if not c then
			return
		end
	end

	if discharscripts then
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("LocalScript") then
				v.Disabled = true
			end
		end
	elseif newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate and (not animate.Disabled) then
			animate.Disabled = true
		else
			newanimate = false
		end
	end

	if addtools then
		for i, v in pairs(addtools:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = c
			end
		end
	end

	pcall(function()
		settings().Physics.AllowSleep = false
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
	end)

	local OLDscripts = {}

	for i, v in pairs(c:GetDescendants()) do
		if v.ClassName == "Script" then
			table.insert(OLDscripts, v)
		end
	end

	local scriptNames = {}

	for i, v in pairs(c:GetDescendants()) do
		if v:IsA("BasePart") then
			local newName = tostring(i)
			local exists = true
			while exists do
				exists = false
				for i, v in pairs(OLDscripts) do
					if v.Name == newName then
						exists = true
					end
				end
				if exists then
					newName = newName .. "_"    
				end
			end
			table.insert(scriptNames, newName)
			Instance.new("Script", v).Name = newName
		end
	end

	c.Archivable = true
	local hum = c:FindFirstChildOfClass("Humanoid")
	if hum then
		for i, v in pairs(hum:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end
	local cl = c:Clone()
	if hum and humState16 then
		hum:ChangeState(Enum.HumanoidStateType.Physics)
		if destroyhum then
			wait(1.6)
		end
	end
	if hum and hum.Parent and destroyhum then
		hum:Destroy()
	end

	if not c then
		return
	end

	local head = gp(c, "Head", "BasePart")
	local torso = gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
	local root = gp(c, "HumanoidRootPart", "BasePart")
	if hatcollide and c:FindFirstChildOfClass("Accessory") then
		local anything = c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script")
		if not (torso and root and anything) then
			return
		end
		torso:Destroy()
		root:Destroy()
		if shp then
			for i,v in pairs(c:GetChildren()) do
				if v:IsA("Accessory") then
					shp(v, "BackendAccoutrementState", 0)
				end 
			end
		end
		anything:Destroy()
	end

	for i, v in pairs(cl:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Transparency = 1
			v.Anchored = false
		end
	end

	local model = Instance.new("Model", c)
	model.Name = model.ClassName

	model.Destroying:Connect(function()
		model = nil
	end)

	for i, v in pairs(c:GetChildren()) do
		if v ~= model then
			if addtools and v:IsA("Tool") then
				for i1, v1 in pairs(v:GetDescendants()) do
					if v1 and v1.Parent and v1:IsA("BasePart") then
						local bv = Instance.new("BodyVelocity", v1)
						bv.Velocity = v3_0
						bv.MaxForce = v3(1000, 1000, 1000)
						bv.P = 1250
						bv.Name = "bv_" .. v.Name
					end
				end
			end
			v.Parent = model
		end
	end

	if breakjoints then
		model:BreakJoints()
	else
		if head and torso then
			for i, v in pairs(model:GetDescendants()) do
				if v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
					local save = false
					if (v.Part0 == torso) and (v.Part1 == head) then
						save = true
					end
					if (v.Part0 == head) and (v.Part1 == torso) then
						save = true
					end
					if save then
						if hedafterneck then
							hedafterneck = v
						end
					else
						v:Destroy()
					end
				end
			end
		end
		if method == 3 then
			spawn(function()
				wait(loadtime)
				if model then
					model:BreakJoints()
				end
			end)
		end
	end

	cl.Parent = c
	for i, v in pairs(cl:GetChildren()) do
		v.Parent = c
	end
	cl:Destroy()

	local noclipmodel = (noclipAllParts and c) or model
	local noclipcon = nil
	local function uncollide()
		if noclipmodel then
			for i, v in pairs(noclipmodel:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		else
			noclipcon:Disconnect()
		end
	end
	noclipcon = stepped:Connect(uncollide)
	uncollide()

	for i, scr in pairs(model:GetDescendants()) do
		if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
			local Part0 = scr.Parent
			if Part0:IsA("BasePart") then
				for i1, scr1 in pairs(c:GetDescendants()) do
					if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
						local Part1 = scr1.Parent
						if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
							align(Part0, Part1)
							break
						end
					end
				end
			end
		end
	end

	local torso1 = torso
	torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
	if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
		local conNeck = nil
		local conTorso = nil
		local contorso1 = nil
		local aligns = {}
		local function enableAligns()
			conNeck:Disconnect()
			conTorso:Disconnect()
			conTorso1:Disconnect()
			for i, v in pairs(aligns) do
				v.Enabled = true
			end
		end
		conNeck = hedafterneck.Changed:Connect(function(prop)
			if table.find({"Part0", "Part1", "Parent"}, prop) then
				enableAligns()
			end
		end)
		conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
		conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
		for i, v in pairs(head:GetDescendants()) do
			if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
				i = tostring(i)
				aligns[i] = v
				v.Destroying:Connect(function()
					aligns[i] = nil
				end)
				v.Enabled = false
			end
		end
	end

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent then
			if v.ClassName == "Script" then
				if table.find(scriptNames, v.Name) then
					v:Destroy()
				end
			elseif not v:IsDescendantOf(model) then
				if v:IsA("Decal") then
					v.Transparency = 1
				elseif v:IsA("ForceField") then
					v.Visible = false
				elseif v:IsA("Sound") then
					v.Playing = false
				elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
					v.Enabled = false
				end
			end
		end
	end

	if newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate then
			animate.Disabled = false
		end
	end

	if addtools then
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = addtools
			end
		end
	end

	local hum0 = model:FindFirstChildOfClass("Humanoid")
	if hum0 then
		hum0.Destroying:Connect(function()
			hum0 = nil
		end)
	end

	local hum1 = c:FindFirstChildOfClass("Humanoid")
	if hum1 then
		hum1.Destroying:Connect(function()
			hum1 = nil
		end)
	end

	if hum1 then
		ws.CurrentCamera.CameraSubject = hum1
		local camSubCon = nil
		local function camSubFunc()
			camSubCon:Disconnect()
			if c and hum1 then
				ws.CurrentCamera.CameraSubject = hum1
			end
		end
		camSubCon = renderstepped:Connect(camSubFunc)
		if hum0 then
			hum0:GetPropertyChangedSignal("Jump"):Connect(function()
				if hum1 then
					hum1.Jump = hum0.Jump
				end
			end)
		else
			respawnrequest()
		end
	end

	local rb = Instance.new("BindableEvent", c)
	rb.Event:Connect(function()
		rb:Destroy()
		sg:SetCore("ResetButtonCallback", true)
		if destroyhum then
			c:BreakJoints()
			return
		end
		if hum0 and (hum0.Health > 0) then
			model:BreakJoints()
			hum0.Health = 0
		end
		if antirespawn then
			respawnrequest()
		end
	end)
	sg:SetCore("ResetButtonCallback", rb)

	spawn(function()
		while c do
			if hum0 and hum1 then
				hum1.Jump = hum0.Jump
			end
			wait()
		end
		sg:SetCore("ResetButtonCallback", true)
	end)

	R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
	if R15toR6 then
		local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
		if part then
			local cfr = part.CFrame
			local R6parts = { 
				head = {
					Name = "Head",
					Size = v3(2, 1, 1),
					R15 = {
						Head = 0
					}
				},
				torso = {
					Name = "Torso",
					Size = v3(2, 2, 1),
					R15 = {
						UpperTorso = 0.2,
						LowerTorso = -0.8
					}
				},
				root = {
					Name = "HumanoidRootPart",
					Size = v3(2, 2, 1),
					R15 = {
						HumanoidRootPart = 0
					}
				},
				leftArm = {
					Name = "Left Arm",
					Size = v3(1, 2, 1),
					R15 = {
						LeftHand = -0.85,
						LeftLowerArm = -0.2,
						LeftUpperArm = 0.4
					}
				},
				rightArm = {
					Name = "Right Arm",
					Size = v3(1, 2, 1),
					R15 = {
						RightHand = -0.85,
						RightLowerArm = -0.2,
						RightUpperArm = 0.4
					}
				},
				leftLeg = {
					Name = "Left Leg",
					Size = v3(1, 2, 1),
					R15 = {
						LeftFoot = -0.85,
						LeftLowerLeg = -0.15,
						LeftUpperLeg = 0.6
					}
				},
				rightLeg = {
					Name = "Right Leg",
					Size = v3(1, 2, 1),
					R15 = {
						RightFoot = -0.85,
						RightLowerLeg = -0.15,
						RightUpperLeg = 0.6
					}
				}
			}
			for i, v in pairs(c:GetChildren()) do
				if v:IsA("BasePart") then
					for i1, v1 in pairs(v:GetChildren()) do
						if v1:IsA("Motor6D") then
							v1.Part0 = nil
						end
					end
				end
			end
			part.Archivable = true
			for i, v in pairs(R6parts) do
				local part = part:Clone()
				part:ClearAllChildren()
				part.Name = v.Name
				part.Size = v.Size
				part.CFrame = cfr
				part.Anchored = false
				part.Transparency = 1
				part.CanCollide = false
				for i1, v1 in pairs(v.R15) do
					local R15part = gp(c, i1, "BasePart")
					local att = gp(R15part, "att1_" .. i1, "Attachment")
					if R15part then
						local weld = Instance.new("Weld", R15part)
						weld.Name = "Weld_" .. i1
						weld.Part0 = part
						weld.Part1 = R15part
						weld.C0 = cf(0, v1, 0)
						weld.C1 = cf(0, 0, 0)
						R15part.Massless = true
						R15part.Name = "R15_" .. i1
						R15part.Parent = part
						if att then
							att.Parent = part
							att.Position = v3(0, v1, 0)
						end
					end
				end
				part.Parent = c
				R6parts[i] = part
			end
			local R6joints = {
				neck = {
					Parent = R6parts.torso,
					Name = "Neck",
					Part0 = R6parts.torso,
					Part1 = R6parts.head,
					C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rootJoint = {
					Parent = R6parts.root,
					Name = "RootJoint" ,
					Part0 = R6parts.root,
					Part1 = R6parts.torso,
					C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rightShoulder = {
					Parent = R6parts.torso,
					Name = "Right Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightArm,
					C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftShoulder = {
					Parent = R6parts.torso,
					Name = "Left Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.leftArm,
					C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				},
				rightHip = {
					Parent = R6parts.torso,
					Name = "Right Hip",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightLeg,
					C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftHip = {
					Parent = R6parts.torso,
					Name = "Left Hip" ,
					Part0 = R6parts.torso,
					Part1 = R6parts.leftLeg,
					C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				}
			}
			for i, v in pairs(R6joints) do
				local joint = Instance.new("Motor6D")
				for prop, val in pairs(v) do
					joint[prop] = val
				end
				R6joints[i] = joint
			end
			hum1.RigType = Enum.HumanoidRigType.R6
			hum1.HipHeight = 0
		end
	end

--[[
    fling function
    usage: fling(target, duration, velocity)
    target can be set to: basePart, CFrame, Vector3, character model or humanoid
    duration (fling time) can be set to a number or a string containing the number (in seconds) will be set to 0.5 if not provided,
    velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)
]]

	local flingpart0 = gp(model, flingpart, "BasePart")
	local flingpart1 = gp(c, flingpart, "BasePart")

	local fling = function() end
	if flingpart0 and flingpart1 then
		flingpart0.Destroying:Connect(function()
			flingpart0 = nil
			fling = function() end
		end)
		flingpart0.Archivable = true
		flingpart1.Destroying:Connect(function()
			flingpart1 = nil
			fling = function() end
		end)
		local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
		local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
		if att0 and att1 then
			att0.Destroying:Connect(function()
				att0 = nil
				fling = function() end
			end)
			att1.Destroying:Connect(function()
				att1 = nil
				fling = function() end
			end)
			local lastfling = nil
			fling = function(target, duration, rotVelocity)
				if typeof(target) == "Instance" then
					if target:IsA("BasePart") then
						target = target.Position
					elseif target:IsA("Model") then
						target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
						if target then
							target = target.Position
						else
							return
						end
					elseif target:IsA("Humanoid") then
						local parent = target.Parent
						if not (parent and parent:IsA("Model")) then
							return
						end
						target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
						if target then
							target = target.Position
						else
							return
						end
					else
						return
					end
				elseif typeof(target) == "CFrame" then
					target = target.Position
				elseif typeof(target) ~= "Vector3" then
					return
				end
				lastfling = target
				if type(duration) ~= number then
					duration = tonumber(duration) or 0.5
				end
				if typeof(rotVelocity) ~= "Vector3" then
					rotVelocity = v3(20000, 20000, 20000)
				end
				if not (target and flingpart0 and flingpart1 and att0 and att1) then
					return
				end
				local flingpart = flingpart0:Clone()
				flingpart.Transparency = 1
				flingpart.Size = v3(0.01, 0.01, 0.01)
				flingpart.CanCollide = false
				flingpart.Name = "flingpart_" .. flingpart0.Name
				flingpart.Anchored = true
				flingpart.Velocity = v3_0
				flingpart.RotVelocity = v3_0
				flingpart.Destroying:Connect(function()
					flingpart = nil
				end)
				flingpart.Parent = flingpart1
				if flingpart0.Transparency > 0.5 then
					flingpart0.Transparency = 0.5
				end
				att1.Parent = flingpart
				for i, v in pairs(att0:GetChildren()) do
					if v:IsA("AlignOrientation") then
						v.Enabled = false
					end
				end
				local con = nil
				con = heartbeat:Connect(function()
					if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
						flingpart0.RotVelocity = rotVelocity
						flingpart.Position = target
					else
						con:Disconnect()
					end
				end)
				local steppedRotVel = v3(
					((rotVelocity.X > 0) and -1) or 1,
					((rotVelocity.Y > 0) and -1) or 1,
					((rotVelocity.Z > 0) and -1) or 1
				)
				local con = nil
				con = stepped:Connect(function()
					if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
						flingpart0.RotVelocity = steppedRotVel
						flingpart.Position = target
					else
						con:Disconnect()
					end
				end)
				wait(duration)
				if lastfling ~= target then
					if flingpart then
						if att1 and (att1.Parent == flingpart) then
							att1.Parent = flingpart1
						end
						flingpart:Destroy()
					end
					return
				end
				target = nil
				if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
					return
				end
				flingpart0.RotVelocity = v3_0
				att1.Parent = flingpart1
				for i, v in pairs(att0:GetChildren()) do
					if v:IsA("AlignOrientation") then
						v.Enabled = true
					end
				end
				if flingpart then
					flingpart:Destroy()
				end
			end
		end
	end

	local lp = game:GetService("Players").LocalPlayer
	local renderstepped = game:GetService("RunService").RenderStepped
	local ws = game:GetService("Workspace")
	local uis = game:GetService("UserInputService")
	local cam = ws.CurrentCamera
	local cf = CFrame.new
	local v3 = Vector3.new
	local partsOffset = headScale - 1

	local fenv = getfenv()
	if fenv.setfpscap then
		fenv.setfpscap(120)
	end

	local function gp(parent, name, className)
		if typeof(parent) == "Instance" then
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then 
					return v
				end
			end
		end
		return nil
	end

	local c = lp.Character
	local model = gp(c, "Model", "Model")
	local head = gp(c, "Head", "BasePart")
	local root = gp(c, "HumanoidRootPart", "BasePart")
	local la = gp(c, "Left Arm", "BasePart")
	local ra = gp(c, "Right Arm", "BasePart")
	local hum = c:FindFirstChildOfClass("Humanoid")
	local ws = game:GetService("Workspace")

	if not (model and head and root and la and ra and hum) then
		return
	end

	if disableVrLaserPointer then
		local sg = game:GetService("StarterGui")
		sg:SetCore("VRLaserPointerMode", 0)
		sg:SetCore("VREnableControllerModels", false)
	end

	local cons = {}

	--gun mod:
	local att = enableGunMod and gp(gp(gp(c, "Meshes/HeavySniper (1)Accessory", "Accessory"), "Handle", "BasePart"), "att1_Handle", "Attachment")
	local racf = ra.CFrame
	if att then
		local handle0 = gp(gp(model, "Meshes/HeavySniper (1)Accessory", "Accessory"), "Handle", "BasePart")
		if not handle0 then
			return
		end
		spawn(function()
			wait()
			if handle0 and handle0.Parent then
				handle0.Transparency = 0
			end
		end)
		local gunpart = ra:Clone()
		gunpart.Name = "gunpart"
		gunpart.Transparency = 1
		gunpart.Anchored = true
		gunpart.Velocity = v3(0, 0, 0)
		gunpart.Parent = c
		att.Orientation = v3(0, 90, -90)
		att.Position = v3(0, -2.5, -0.6)
		att.Parent = gunpart
		local pointer = Instance.new("Part")
		pointer.Name = "pointer"
		pointer.Size = v3(0.1, 0.1, 0.1)
		pointer.Transparency = 1
		pointer.Shape = "Ball"
		pointer.Color = Color3.new(0, 0, 1)
		pointer.Material = "Neon"
		pointer.Anchored = true
		pointer.CanCollide = false
		pointer.CFrame = racf
		pointer.Parent = c
		local raycastpar = RaycastParams.new()
		raycastpar.FilterType = Enum.RaycastFilterType.Blacklist
		raycastpar.FilterDescendantsInstances = {c}
		raycastpar.IgnoreWater = false
		local equipped = false
		local shooting = false
		cons.gunibegan = uis.InputBegan:Connect(function(key)
			key = key.KeyCode
			if equipped and (key == shootbutton) then
				shooting = true
				while shooting do
					fling(pointer.Position, 0.1)
				end
			elseif key == equipbutton then
				equipped = not equipped
				if equipped then
					att.Parent = ra
					pointer.Transparency = 0
				else
					shooting = false
					gunpart.CFrame = racf
					att.Parent = gunpart
					pointer.Transparency = 1
				end
			end
		end)
		cons.guniended = uis.InputEnded:Connect(function(key)
			if shooting and (key.KeyCode == shootbutton) then
				shooting = false
			end
		end)
		cons.gunpointer = renderstepped:Connect(function()
			if equipped then
				local raycastres = ws:Raycast(racf.Position + racf.LookVector * 0.75, racf.UpVector * -1000, raycastpar)
				if raycastres then
					pointer.Position = raycastres.Position
				end
			end
		end)
		cons.gunchanged = gunpart:GetPropertyChangedSignal("Parent"):Connect(function()
			for i, v in pairs(cons) do
				v:Disconnect()
			end
			cam.CameraType = Enum.CameraType.Custom
		end)
		cons.gunpointerchanged = pointer:GetPropertyChangedSignal("Parent"):Connect(function()
			for i, v in pairs(cons) do
				v:Disconnect()
			end
			equipped = false
			shooting = false
			cam.CameraType = Enum.CameraType.Custom
		end)
	end

	local event = Instance.new("BindableEvent", c)
	flyFPS = 1 / flyFPS
	local tf = 0
	cons.flyStepped = renderstepped:Connect(function(s)
		tf += s
		if tf >= flyFPS then
			for i=1, math.floor(tf / flyFPS) do
				event:Fire(true)
			end
			tf = 0
		end
	end)
	local event = event.Event

	cam.CameraSubject = nil
	cam.CameraType = Enum.CameraType.Scriptable
	cam.HeadScale = headScale
	cam.CFrame = cf(head.Position)

	for i, v in pairs(c:GetChildren()) do
		if v:IsA("BasePart") then
			v.Anchored = true
			v.CFrame = cam.CFrame
		end
	end

	local flymultiplier = 0
	cons.fly = event:Connect(function()
		if flymultiplier < -0.01 then
			cam.CFrame += (racf * handsOffset).LookVector * flymultiplier
		end
	end)
	cons.ic = uis.InputChanged:Connect(function(key)
		if key.KeyCode == flybutton then
			flymultiplier = key.Position.Z * -flyspeed
		end
	end)

	for i, v in pairs(c:GetDescendants()) do
		pcall(function()
			v.Transparency = 1
		end)
	end

	local function setHandTransparency(handName)
		local hand = gp(model, handName, "BasePart")
		if hand then
			hand.Transparency = handTransparency
		end
	end

	setHandTransparency("Left Arm")
	setHandTransparency("LeftUpperArm")
	setHandTransparency("LeftLowerArm")
	setHandTransparency("LeftHand")

	setHandTransparency("Right Arm")
	setHandTransparency("RightUpperArm")
	setHandTransparency("RightLowerArm")
	setHandTransparency("RightHand")

	local function removeCharPart(name)
		local part = gp(c, name, "BasePart")
		if part then
			part:Destroy()
		end 
	end

	hum.BreakJointsOnDeath = false
	hum.RequiresNeck = false

	removeCharPart("Torso")
	removeCharPart("Left Leg")
	removeCharPart("Right Leg")

	local enumhead = Enum.UserCFrame.Head
	local enumrh = Enum.UserCFrame.RightHand
	local enumlh = Enum.UserCFrame.LeftHand

	local v3_5 = v3(0, 5, 0)

	cons.cfr = uis.UserCFrameChanged:Connect(function(part, move)
		if part == enumhead then
			head.CFrame = cam.CFrame * cf(move.p * partsOffset) * move
			root.Position = head.Position - v3_5
		elseif part == enumlh then
			la.CFrame = cam.CFrame * cf(move.p * partsOffset) * move * handsOffset
		elseif part == enumrh then
			racf = cam.CFrame * cf(move.p * partsOffset) * move * handsOffset
			ra.CFrame = racf
		end
	end)

	local function addChanged(inst)
		cons["chg_" .. inst.Name] = inst:GetPropertyChangedSignal("Parent"):Connect(function()
			for i, v in pairs(cons) do
				v:Disconnect()
			end
			cam.CameraType = Enum.CameraType.Custom
		end)
	end

	addChanged(c)
	addChanged(model)
	addChanged(la)
	addChanged(ra)
	addChanged(root)
	addChanged(head)
	addChanged(cam)
end)

UICorner_5.Parent = VRR15

AIMVIEWER.Name = "AIM VIEWER"
AIMVIEWER.Parent = Frame
AIMVIEWER.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
AIMVIEWER.BorderColor3 = Color3.fromRGB(118, 0, 2)
AIMVIEWER.Position = UDim2.new(0.0290102586, 0, 0.750798702, 0)
AIMVIEWER.Size = UDim2.new(0, 162, 0, 50)
AIMVIEWER.Font = Enum.Font.Arial
AIMVIEWER.Text = "AIM VIEWER"
AIMVIEWER.TextColor3 = Color3.fromRGB(255, 0, 8)
AIMVIEWER.TextSize = 20.000
AIMVIEWER.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
AIMVIEWER.TextStrokeTransparency = 0.000
AIMVIEWER.TextWrapped = true
AIMVIEWER.MouseButton1Down:connect(function()
	--Credits to the scripter

	-- // Services
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")

	-- // Vars
	local Terrain = Workspace.Terrain
	local LocalPlayer = Players.LocalPlayer
	local Beams = {}

	local Colours = {
		At = ColorSequence.new(Color3.new(1, 0, 0), Color3.new(1, 0, 0)),
		Away = ColorSequence.new(Color3.new(0, 1, 0), Color3.new(0, 1, 0))
	}

	-- // Checks if the beam is hitting our character and can't go through walls
	local function IsBeamHit(Beam: Beam, MousePos: Vector3)
		-- // Get our character
		local Character = LocalPlayer.Character
		local Attachment = Beam.Attachment1

		-- // Workout the direction
		local Origin = Beam.Attachment0.WorldPosition
		local Direction = MousePos - Origin

		-- // Fire the ray, making sure it hits something (should unless aiming at sky?)
		local raycastParms = RaycastParams.new()
		raycastParms.FilterDescendantsInstances = {Character, Workspace.CurrentCamera}
		local RaycastResult = Workspace:Raycast(Origin, Direction * 2, raycastParms) -- // Multiplied by 2 as ray might fall too short
		if (not RaycastResult) then
			Beam.Color = Colours.Away
			Attachment.WorldPosition = MousePos
			return
		end

		-- // Set the colour based upon if aiming at us or not
		if (Character) then
			Beam.Color = RaycastResult.Instance:IsDescendantOf(Character) and Colours.At or Colours.Away
		end

		-- // Set the position so the beam can't go through walls
		Attachment.WorldPosition = RaycastResult.Position
	end

	-- // Creates a beam with the default properties
	local function CreateBeam(Character: Model)
		-- // Create beam
		local Beam = Instance.new("Beam", Character)

		-- // Set important properties
		Beam.Attachment0 = Character:WaitForChild("Head"):WaitForChild("FaceCenterAttachment")
		Beam.Enabled = Character:FindFirstChild("GunScript", true) ~= nil

		-- // Set visual properties
		Beam.Width0 = 0.1
		Beam.Width1 = 0.1

		-- // Add to beam table so can modify all at once
		table.insert(Beams, Beam)

		-- // Return
		return Beam
	end

	-- // Apply whenever we get a new character
	local function OnCharacter(Character: Model)
		-- // Make sure character exists
		if (not Character) then
			return
		end

		-- // Wait for the MousePos
		local MousePos = Character:WaitForChild("BodyEffects"):WaitForChild("MousePos")

		-- // Create the beam
		local Beam = CreateBeam(Character)

		-- // Attachment for the mouse position
		local Attachment = Instance.new("Attachment", Terrain)
		Beam.Attachment1 = Attachment

		-- // Constantly update when MousePos updates
		IsBeamHit(Beam, MousePos.Value)
		MousePos.Changed:Connect(function()
			IsBeamHit(Beam, MousePos.Value)
		end)

		-- // See whenever they equip a gun
		Character.DescendantAdded:Connect(function(Descendant)
			-- // Check if it is a gun, set enabled
			if (Descendant.Name == "GunScript") then
				Beam.Enabled = true
			end
		end)

		-- // See whenever they unequip a gun
		Character.DescendantRemoving:Connect(function(Descendant)
			-- // Check if it is a gun, set disabled
			if (Descendant.Name == "GunScript") then
				Beam.Enabled = false
			end
		end)
	end

	-- // Apply on each player
	local function OnPlayer(Player: Player)
		OnCharacter(Player.Character)
		Player.CharacterAdded:Connect(OnCharacter)
	end

	for _, v in ipairs(Players:GetPlayers()) do
		OnPlayer(v)
	end

	-- // Redo for each new player
	Players.PlayerAdded:Connect(OnPlayer)	
end)

UICorner_6.Parent = AIMVIEWER

BikeFly.Name = "Bike Fly"
BikeFly.Parent = Frame
BikeFly.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
BikeFly.BorderColor3 = Color3.fromRGB(118, 0, 2)
BikeFly.Position = UDim2.new(0.372013688, 0, 0.750798702, 0)
BikeFly.Size = UDim2.new(0, 162, 0, 50)
BikeFly.Font = Enum.Font.Arial
BikeFly.Text = "Bike Fly"
BikeFly.TextColor3 = Color3.fromRGB(255, 0, 8)
BikeFly.TextSize = 20.000
BikeFly.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
BikeFly.TextStrokeTransparency = 0.000
BikeFly.TextWrapped = true
BikeFly.MouseButton1Down:connect(function()
	local speed = 20
	local old
	local Plr = game.Players.LocalPlayer
	local wheels = {}
	local control = {q=false,e=false,w=false,a=false,s=false,d=false}
	local Mouse = Plr:GetMouse()

	Mouse.KeyDown:connect(function(KEY)
		local key = KEY:lower()
		if control[key] ~= nil then
			control[key]=true
		end
	end)

	Mouse.KeyUp:connect(function(KEY)
		local key = KEY:lower()
		if control[key] ~= nil then
			control[key]=false
		end
	end)

	while game.RunService.Stepped:wait() do
		local seat = (Plr.Character or Plr.CharacterAdded:wait()):WaitForChild("Humanoid").SeatPart
		if Plr.PlayerGui:FindFirstChild("MainScreenGui") and Plr.PlayerGui.MainScreenGui:FindFirstChild("Bar") and Plr.PlayerGui.MainScreenGui.Bar:FindFirstChild("Speed") then
			Plr.PlayerGui.MainScreenGui.Bar.Speed.bar.Size = UDim2.new(speed / 100 * 0.95, 0, 0.83, 0)
		else
			local c = Plr.PlayerGui.MainScreenGui.Bar.HP
			local g = c:Clone()
			g.Name = "Speed"
			g.Position = UDim2.new(0.5, 0, 1, -120)
			g.bar.BackgroundColor3 = Color3.fromRGB(255, 155, 0)
			g.Picture.Image.Image = "rbxassetid://181035717"
			g.TextLabel.Text = "Speed"
			g.Parent = c.Parent
		end
		if seat ~= nil and seat:IsDescendantOf(game.Workspace.Vehicles) then
			if seat ~= old then
				if old then
					old.Vel:Destroy()
					old.Gyro:Destroy()
				end
				old = seat
				for i = 1, 2 do
					if wheels[i] then
						wheels[i][2].Parent = wheels[i][1]
					end
					local wheel = seat.Parent.Wheel
					wheels[i] = {seat.Parent, wheel}
					wheel:remove()
				end
				local gyro = Instance.new("BodyGyro", seat)
				gyro.Name = "Gyro"
				local pos = Instance.new("BodyVelocity", seat)
				pos.Name = "Vel"
				gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				pos.MaxForce = Vector3.new(9e9, 9e9, 9e9)
			else 
				seat.Gyro.cframe = workspace.CurrentCamera.CoordinateFrame
				local vel = CFrame.new(0, 0, 0)
				if control.w then
					vel = vel * CFrame.new(0, 0, -speed)
				end
				if control.s then
					vel = vel * CFrame.new(0, 0, speed)
				end
				if control.a then
					vel = vel * CFrame.new(-speed, 0, 0)
				end
				if control.d then
					vel = vel * CFrame.new(speed, 0, 0)
				end
				seat.Vel.Velocity = (seat.CFrame*vel).p - seat.CFrame.p
			end
		end
		if control.e and speed<100 then
			speed = speed + 1
		end
		if control.q and speed > 0 then
			speed = speed - 1
		end
	end
end)

UICorner_7.Parent = BikeFly

ANTILOCK.Name = "ANTI LOCK"
ANTILOCK.Parent = Frame
ANTILOCK.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
ANTILOCK.BorderColor3 = Color3.fromRGB(118, 0, 2)
ANTILOCK.Position = UDim2.new(0.703071713, 0, 0.10223645, 0)
ANTILOCK.Size = UDim2.new(0, 162, 0, 50)
ANTILOCK.Font = Enum.Font.Arial
ANTILOCK.Text = "anti lock"
ANTILOCK.TextColor3 = Color3.fromRGB(255, 0, 8)
ANTILOCK.TextSize = 20.000
ANTILOCK.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
ANTILOCK.TextStrokeTransparency = 0.000
ANTILOCK.TextWrapped = true
ANTILOCK.MouseButton1Down:connect(function()
	getgenv().Mode = "Underground" --// Modes: Underground, Sky, Prediction Changer
	getgenv().KeyBind = "n" --// Key to press to enable
	getgenv().PredictionAmount = "2" --// Number to change prediction to

	loadstring(game:HttpGet('https://fourdevils.gq/anti-aim-hub.lua'))()
end)

UICorner_8.Parent = ANTILOCK

LOCK.Name = "LOCK"
LOCK.Parent = Frame
LOCK.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
LOCK.BorderColor3 = Color3.fromRGB(118, 0, 2)
LOCK.Position = UDim2.new(0.0290102959, 0, 0.10223645, 0)
LOCK.Size = UDim2.new(0, 162, 0, 50)
LOCK.Font = Enum.Font.Arial
LOCK.Text = "LOCK"
LOCK.TextColor3 = Color3.fromRGB(255, 0, 8)
LOCK.TextSize = 20.000
LOCK.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
LOCK.TextStrokeTransparency = 0.000
LOCK.TextWrapped = true
LOCK.MouseButton1Down:connect(function()
	local hotkey = "x" -- toggle key
	local mouse = game.Players.LocalPlayer:GetMouse()



	mouse.KeyDown:Connect(function(key)
		if key == hotkey then
			if getgenv().ValiantAimHacks.SilentAimEnabled == true then
				getgenv().ValiantAimHacks.SilentAimEnabled = false
			else
				getgenv().ValiantAimHacks.SilentAimEnabled = true
			end
		end
	end)


	-- // Services
	local Players = game:GetService("Players")

	-- // Vars
	local LocalPlayer = Players.LocalPlayer
	local accomidationfactor = 0.12567724521

	-- // Silent Aim Module
	local SilentAim = loadstring(game:HttpGet("https://pastebin.com/raw/2f0mGbMP"))()
	SilentAim.TeamCheck = false
	-- // Metatable vars
	local mt = getrawmetatable(game)
	local backupindex = mt.__index
	setreadonly(mt, false)

	-- // Check if player is down
	SilentAim.checkSilentAim = function()
		local checkA = (SilentAim.SilentAimEnabled == true and SilentAim.Selected ~= LocalPlayer)
		local playerCharacter = SilentAim.Selected.Character
		local daHood = (playerCharacter.BodyEffects["K.O"].Value == false or playerCharacter:FindFirstChild("GRABBING_CONSTRAINT") ~= nil)

		return (checkA and daHood)
	end

	-- // Hook
	mt.__index = newcclosure(function(t, k)
		if (t:IsA("Mouse") and (k == "Hit")) then
			print(t, k)
			local CPlayer = SilentAim.Selected
			if (SilentAim.checkSilentAim()) then
				if (CPlayer.Character:FindFirstChild("HumanoidRootPart")) then
					return {p=(CPlayer.Character.HumanoidRootPart.CFrame.p+(CPlayer.Character.HumanoidRootPart.Velocity*accomidationfactor))}
				end
			end
		end
		return backupindex(t, k)
	end)

	-- // Revert
	setreadonly(mt, true)
	getgenv().ValiantAimHacks.FOV = 50
end)

UICorner_9.Parent = LOCK

LOCKANDANTILOCK.Name = "LOCK AND ANTILOCK"
LOCKANDANTILOCK.Parent = Frame
LOCKANDANTILOCK.BackgroundColor3 = Color3.fromRGB(131, 0, 4)
LOCKANDANTILOCK.BorderSizePixel = 0
LOCKANDANTILOCK.Position = UDim2.new(0.305460751, 0, 0.10223642, 0)
LOCKANDANTILOCK.Size = UDim2.new(0, 233, 0, 50)
LOCKANDANTILOCK.Font = Enum.Font.Cartoon
LOCKANDANTILOCK.Text = "(LOCK X) : (ANTILOCK N) : (SILENT AIM T)"
LOCKANDANTILOCK.TextColor3 = Color3.fromRGB(0, 0, 0)
LOCKANDANTILOCK.TextSize = 22.000
LOCKANDANTILOCK.TextWrapped = true

autofarm.Name = "auto farm"
autofarm.Parent = Frame
autofarm.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
autofarm.BorderColor3 = Color3.fromRGB(118, 0, 2)
autofarm.Position = UDim2.new(0.0290102698, 0, 0.434504807, 0)
autofarm.Size = UDim2.new(0, 162, 0, 50)
autofarm.Font = Enum.Font.Arial
autofarm.Text = "auto farm money"
autofarm.TextColor3 = Color3.fromRGB(255, 0, 8)
autofarm.TextSize = 20.000
autofarm.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
autofarm.TextStrokeTransparency = 0.000
autofarm.TextWrapped = true
autofarm.MouseButton1Down:connect(function()
	loadstring(game:HttpGet("https://pastebin.com/raw/74VJ07iY", true))()
end)


UICorner_10.Parent = autofarm

SILENTAIM.Name = "SILENT AIM"
SILENTAIM.Parent = Frame
SILENTAIM.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
SILENTAIM.BorderColor3 = Color3.fromRGB(118, 0, 2)
SILENTAIM.Position = UDim2.new(0.418088734, 0, 0.0447284281, 0)
SILENTAIM.Size = UDim2.new(0, 96, 0, 18)
SILENTAIM.Font = Enum.Font.Arial
SILENTAIM.Text = "silent aim"
SILENTAIM.TextColor3 = Color3.fromRGB(255, 0, 8)
SILENTAIM.TextSize = 20.000
SILENTAIM.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
SILENTAIM.TextStrokeTransparency = 0.000
SILENTAIM.TextWrapped = true
SILENTAIM.MouseButton1Down:connect(function()
	local hotkey = "t" -- toggle key
	local mouse = game.Players.LocalPlayer:GetMouse()



	mouse.KeyDown:Connect(function(key)
		if key == hotkey then
			if getgenv().ValiantAimHacks.SilentAimEnabled == true then
				getgenv().ValiantAimHacks.SilentAimEnabled = false
			else
				getgenv().ValiantAimHacks.SilentAimEnabled = true
			end
		end
	end)


	-- // Services
	local Players = game:GetService("Players")

	-- // Vars
	local LocalPlayer = Players.LocalPlayer
	local accomidationfactor = 0.12567724521

	-- // Silent Aim Module
	local SilentAim = loadstring(game:HttpGet("https://pastebin.com/raw/2f0mGbMP"))()
	SilentAim.TeamCheck = false
	-- // Metatable vars
	local mt = getrawmetatable(game)
	local backupindex = mt.__index
	setreadonly(mt, false)

	-- // Check if player is down
	SilentAim.checkSilentAim = function()
		local checkA = (SilentAim.SilentAimEnabled == true and SilentAim.Selected ~= LocalPlayer)
		local playerCharacter = SilentAim.Selected.Character
		local daHood = (playerCharacter.BodyEffects["K.O"].Value == false or playerCharacter:FindFirstChild("GRABBING_CONSTRAINT") ~= nil)

		return (checkA and daHood)
	end

	-- // Hook
	mt.__index = newcclosure(function(t, k)
		if (t:IsA("Mouse") and (k == "Hit")) then
			print(t, k)
			local CPlayer = SilentAim.Selected
			if (SilentAim.checkSilentAim()) then
				if (CPlayer.Character:FindFirstChild("HumanoidRootPart")) then
					return {p=(CPlayer.Character.HumanoidRootPart.CFrame.p+(CPlayer.Character.HumanoidRootPart.Velocity*accomidationfactor))}
				end
			end
		end
		return backupindex(t, k)
	end)

	-- // Revert
	setreadonly(mt, true)
	getgenv().ValiantAimHacks.FOV = 50
end)


UICorner_11.Parent = SILENTAIM


CLOSE.Name = "CLOSE"
CLOSE.Parent = Frame
CLOSE.BackgroundColor3 = Color3.fromRGB(212, 0, 4)
CLOSE.BorderColor3 = Color3.fromRGB(0, 0, 0)
CLOSE.Position = UDim2.new(0.0153583884, 0, 0.0191693306, 0)
CLOSE.Size = UDim2.new(0, 18, 0, 20)
CLOSE.Font = Enum.Font.Arial
CLOSE.Text = "X"
CLOSE.TextColor3 = Color3.fromRGB(255, 0, 8)
CLOSE.TextSize = 20.000
CLOSE.TextStrokeColor3 = Color3.fromRGB(118, 0, 2)
CLOSE.TextStrokeTransparency = 0.000
CLOSE.TextWrapped = true

UICorner_12.Parent = CLOSE

-- Scripts:

local function MZPFIN_fake_script() -- CLOSE.Close 
	local script = Instance.new('LocalScript', CLOSE)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Visible = false
	end)
	
end
coroutine.wrap(MZPFIN_fake_script)()
